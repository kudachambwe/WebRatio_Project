#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show Header" name="show-header" type="boolean" default="true">
Defines the rendition of the header on the top.
Allowed values are: true (default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Alternate Rows" name="use-alternate" type="boolean" default="false">
Defines the usage of alternates colours for each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Links Position" name="link-position" type="enum" values="left|right|on_row" default="right">
Defines the rendition of the sub levels links.
Allowed values are:
- right (default): places the links on the right
- left: places the links on the left
- on_row: places the first link on the attributes
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the unit is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>

[%
import org.apache.commons.lang.StringUtils
import org.apache.commons.lang.math.NumberUtils

setHTMLOutput()

def unitId = unit["id"]

def unitLink = unit.selectSingleNode("layout:Link[string(@_exp) != 't']")
def link = unitLink?.valueOf("@link")
def myIndex = unit.hashCode()

def showHeader = params["show-header"]
def useAlternate = params["use-alternate"]
def linkPosition = params["link-position"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]


%]
[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain PowerIndexUnit">
				<table class="pure-table <wr:StyleClass/>[% if (useAlternate != "true") { %] pure-table-bordered[% } %]">
					[% if (showHeader == "true") {%]
					<thead>
						<tr>
						[% if (linkPosition == "left") { %]
							<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
								<wr:Visible><th class="<wr:StyleClass/> header small-cell"></th></wr:Visible>
							</wr:Iterate>
						[% }  %]
						<wr:Iterate var="att" context="unit" select="layout:Attribute">
					        <wr:Visible>
					        <th class="<wr:StyleClass/> header">
						     	<wr:Label/>
					        </th>
					        </wr:Visible>
					    </wr:Iterate>
						<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (linkPosition == "right" || (linkPosition == "on_row" && index > 0)) { %]
								<wr:Visible><th class="<wr:StyleClass/> header small-cell"></th></wr:Visible>
							[% } %]
						</wr:Iterate>	
						</tr>
					</thead>
					[% } %]
				<!-- instances -->
				<c:forEach var="current" varStatus="status" items="${<wr:Id context="unit"/>.data}">
					<c:set var="index" value="${status.index}"/>	
						<tr class="row<c:if test="${<wr:Id context="unit"/>.currentIndex eq index}"> current</c:if>[% if (useAlternate == "true") { %]<c:if test="${index mod 2 eq 0}"> pure-table-odd</c:if>[% } %]">	
							[% if (linkPosition == "left") { %]
								<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
									<wr:Visible>
									<td class="<wr:StyleClass context="unitLink"/> link small-cell">
										<wr:Link class="link"/>
									</td>
									</wr:Visible>
								</wr:Iterate>
							[% } %]
							<wr:Iterate var="attr" context="unit" select="layout:Attribute">
								<wr:Visible>
								<td class="<wr:StyleClass/> value [%= attr["type"]%]">
								[% if ((linkPosition == "on_row") && (unitLink != null)) {%]
									<wr:Visible position="'index'">
										<wr:Visible context="unitLink" position="'index'">
											<a href="<wr:URL context="unitLink"/>" class="<wr:StyleClass context="unitLink"/> link"[% if (isAjaxLink(unitLink)) { %] onclick="<wr:AjaxURL context="unitLink" />"[% } %][%if (unitLink?.attributeValue("newWindow") == "true") { %] target="_blank" [% } %]>
										</wr:Visible>
										<wr:Value/>
										<wr:Visible context="unitLink" position="'index'">
											</a>
										</wr:Visible>
									</wr:Visible>
								[% } else {%]
								   	<wr:Value />								   
								[% } %]
								</td>
								</wr:Visible>
							</wr:Iterate>
						   <wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (linkPosition == "right" || (linkPosition == "on_row" && index > 0)) { %]
						      	<wr:Visible>
						      	<td class="<wr:StyleClass context="unitLink"/> link small-cell">
									<wr:Link class="link"/>
								</td>
								</wr:Visible>
							[% } %]
						   </wr:Iterate>
						</tr>
					</c:forEach>
				</table>
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain PowerIndexUnit">
				<div class="pure-alert">
					<bean:message key="[%printJSPTagValue(emptyUnitMessage)%]"/>
				</div>
			</div>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]